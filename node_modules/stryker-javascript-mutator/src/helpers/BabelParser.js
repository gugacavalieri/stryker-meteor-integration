"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var babel = require("babel-core");
var babylon = require("babylon");
var babel_generator_1 = require("babel-generator");
var BabelParser = /** @class */ (function () {
    function BabelParser() {
    }
    BabelParser.getAst = function (code) {
        var ast;
        var options = {
            sourceType: 'script',
            plugins: [
                'jsx',
                'flow',
                'objectRestSpread',
                'classProperties',
                'asyncGenerators',
                'dynamicImport'
            ]
        };
        try {
            ast = babylon.parse(code, options);
        }
        catch (_a) {
            options.sourceType = 'module';
            ast = babylon.parse(code, options);
        }
        return ast;
    };
    BabelParser.getNodes = function (ast) {
        var nodes = [];
        babel.traverse(ast, {
            enter: function (path) {
                var node = path.node;
                node.parent = path.parent;
                Object.freeze(node);
                nodes.push(node);
            }
        });
        return nodes;
    };
    BabelParser.generateCode = function (ast, node) {
        ast.program.body = [node];
        return babel_generator_1.default(ast).code;
    };
    BabelParser.removeUseStrict = function (ast) {
        if (ast.program.directives) {
            var directives_1 = ast.program.directives;
            directives_1.forEach(function (directive, index) {
                if (directive.value.value === 'use strict') {
                    directives_1.splice(index, 1);
                }
            });
        }
    };
    return BabelParser;
}());
exports.default = BabelParser;
//# sourceMappingURL=BabelParser.js.map