"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ProgressKeeper_1 = require("./ProgressKeeper");
var ProgressBar_1 = require("./ProgressBar");
var ProgressBarReporter = /** @class */ (function (_super) {
    tslib_1.__extends(ProgressBarReporter, _super);
    function ProgressBarReporter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProgressBarReporter.prototype.onAllMutantsMatchedWithTests = function (matchedMutants) {
        _super.prototype.onAllMutantsMatchedWithTests.call(this, matchedMutants);
        var progressBarContent = "Mutation testing  [:bar] :percent (ETC :etas) :tested/:total tested (:survived survived)";
        this.progressBar = new ProgressBar_1.default(progressBarContent, {
            width: 50,
            complete: '=',
            incomplete: ' ',
            stream: process.stdout,
            total: this.progress.total
        });
    };
    ProgressBarReporter.prototype.onMutantTested = function (result) {
        var ticksBefore = this.progress.tested;
        _super.prototype.onMutantTested.call(this, result);
        if (ticksBefore < this.progress.tested) {
            this.tick();
        }
        else {
            this.render();
        }
    };
    ProgressBarReporter.prototype.tick = function () {
        this.progressBar.tick(this.progress);
    };
    ProgressBarReporter.prototype.render = function () {
        this.progressBar.render(this.progress);
    };
    return ProgressBarReporter;
}(ProgressKeeper_1.default));
exports.default = ProgressBarReporter;
//# sourceMappingURL=ProgressReporter.js.map