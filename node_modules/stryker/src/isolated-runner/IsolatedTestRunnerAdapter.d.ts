/// <reference types="node" />
import { EventEmitter } from 'events';
import { TestRunner, RunResult, RunOptions } from 'stryker-api/test_runner';
import IsolatedRunnerOptions from './IsolatedRunnerOptions';
/**
 * Runs the given test runner in a child process and forwards reports about test results
 * Also implements timeout-mechanism (on timeout, restart the child runner and report timeout)
 */
export default class TestRunnerChildProcessAdapter extends EventEmitter implements TestRunner {
    private realTestRunnerName;
    private options;
    private readonly log;
    private workerProcess;
    private currentTask;
    private lastMessagesQueue;
    constructor(realTestRunnerName: string, options: IsolatedRunnerOptions);
    private startWorker;
    private listenToWorkerProcess;
    private logReceivedUnexpectedMessageWarning;
    private logReceivedMessageWarning;
    init(): Promise<any>;
    run(options: RunOptions): Promise<RunResult>;
    dispose(): Promise<void>;
    private sendRunCommand;
    private send;
    private sendStartCommand;
    private sendInitCommand;
    private sendDisposeCommand;
}
