/// <reference types="node" />
export declare function glob(expression: string): Promise<string[]>;
export declare function deleteDir(dirToDelete: string): Promise<void>;
export declare function cleanFolder(folderName: string): Promise<string | null>;
/**
 * Wrapper around the 'require' function (for testability)
 */
export declare function importModule(moduleName: string): void;
/**
 * Writes data to a specified file.
 * @param fileName The path to the file.
 * @param data The content of the file.
 * @returns A promise to eventually save the file.
 */
export declare function writeFile(fileName: string, data: string | Buffer): Promise<void>;
/**
 * Creates a symlink at `from` that points to `to`
 * @param to The thing you want to point to
 * @param from The thing you want to point from
 */
export declare function symlinkJunction(to: string, from: string): Promise<void>;
/**
 * Looks for the node_modules folder from basePath up to root.
 * returns the first occurrence of the node_modules, or null of none could be found.
 * @param basePath starting point
 */
export declare function findNodeModules(basePath: string): Promise<string | null>;
